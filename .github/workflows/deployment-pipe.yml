name: Development Deployment

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "development" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "development" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  DB_HOST: ${{ secrets.DEV_DB_HOST }}
  DB_NAME: ${{ secrets.DEV_DB_NAME }}
  DB_USER: ${{ secrets.DEV_DB_USER }}
  DB_PASS: ${{ secrets.DEV_DB_PASS }}
  SERVER_URL: ${{ vars.DEV_SERVER_URL }}
  NODE_ENV: github
  FRONTEND_DEVELOPMENT_PORT: ${{ vars.FRONTEND_DEVELOPMENT_PORT }}
  BACKEND_DEVELOPMENT_PORT: ${{ vars.BACKEND_DEVELOPMENT_PORT }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: 'v1.13.1'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  deploy:
    name: deploy docker:remote
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: setup docker remote
        uses: arwynfr/actions-docker-context@v2
        with:
          docker_host: 'ssh://wappson@45.129.183.130'
          context_name: 'development-server'
          ssh_cert: ${{ secrets.SSH_CERT }}
          ssh_key: ${{ secrets.SSH_KEY }}


      - name: change context
        run: docker context use development-server

      - name: pull fresh images
        working-directory: docker-compose-github-dev
        run: docker-compose pull

      - name: build images
        working-directory: docker-compose-github-dev
        run: docker-compose build --pull --no-cache

      - name: deploy
        working-directory: docker-compose-github-dev
        run: docker-compose -p kummerchat-development up --build -d --force-recreate

  testing-success:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Giving App some time to start (15s)
        run: sleep 15
      - name: Frontend
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://dev.kummerchat.com'
          method: 'GET'
      - name: Backend
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://dev.kummerchat.com/api/user/online'
          method: 'GET'
